{"version":3,"sources":["webpack:///webpack/bootstrap f2a9ec46461de9537b22","webpack:///./index.js","webpack:///./node_modules/shuffle-words/index.js"],"names":["window","aGoodHardShuffling","text","document","getElementById","value","textContent","shuffleWords"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA;;AAEAA,OAAOC,kBAAP,GAA4B,MAAM;AAChC,QAAMC,OAAOC,SAASC,cAAT,CAAwB,OAAxB,EAAiCC,KAA9C;AACAF,WAASC,cAAT,CAAwB,QAAxB,EAAkCE,WAAlC,GAAgD,qDAAAC,CAAaL,IAAb,CAAhD;AACD,CAHD,C;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f2a9ec46461de9537b22","import shuffleWords from \"shuffle-words\";\n\nwindow.aGoodHardShuffling = () => {\n  const text = document.getElementById(\"input\").value;\n  document.getElementById(\"output\").textContent = shuffleWords(text);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/*!\n * shuffle-words <https://github.com/jonschlinkert/shuffle-words>\n *\n * Copyright (c) 2014 Jon Schlinkert, contributors.\n * Licensed under the MIT license.\n */\n\n'use strict';\n\nmodule.exports = function(str, letters) {\n  var words = str.split(' ');\n\n  // see: http://stackoverflow.com/a/6274398/1267639\n  function shuffle(arr) {\n    var len = arr.length;\n    var swap;\n    var i;\n\n    while (len > 0) {\n      i = Math.floor(Math.random() * len);\n      len--;\n      swap = arr[len];\n      arr[len] = arr[i];\n      arr[i] = swap;\n    }\n    return arr;\n  }\n\n  if (letters) {\n    words = words.map(function(word) {\n      return shuffle(word.split('')).join('');\n    });\n  }\n  return shuffle(words).join(' ');\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/shuffle-words/index.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}